# 困难程度的题目

- 寻找两个有序数组的中位数
- 有效数字
- 编辑距离（困难）
- LFU
- 掉落的鸡蛋

# DFA
- 字符串转换为整数
- UTF-8验证码

# 数学
- 旋转图像
- 螺旋矩阵

# 动态规划
- 回文子串
- 最长回文子串
- 不同的路径
   - 空间复杂度可以优化到O(n)
- 迷宫寻路（Ⅰ、Ⅱ）
- 不同的二叉搜索树（Ⅰ、Ⅱ）
- 单词分解
- 最大正方形
- 丑数Ⅰ、Ⅱ（剑指offer 34题）
   - 一个新的丑数一定是前面某一个丑数乘以2、3、5的结果
- 打家劫舍Ⅰ（一条街）
   - 一维数组的动态规划可以有优化为空间复杂度为常量
- 打家劫舍Ⅱ（环形街）
   - 环拆解成两条线：分别是不选择头节点和不选择尾节点
- 打家劫舍Ⅲ
- 最大矩形
- 戳气球
   - 条件的反向思考：删除 <==> 插入
   - 分治与回溯的优劣
- 01矩阵

# 回溯算法
- 括号生成
- 字符串的排列（剑指offer）
- 子集

# 递归
- 递归乘法
- 划分为k个相等的子集
- 把数字翻译成字符串
- 字符串
- Z字型
- 罗马数字转换

# 排序
- 合并区间
- 颜色分类（荷兰国旗问题）

# 双指针（边界的移动）
- 删除排序数组中的重复项
- 删除排序数组中的重复项Ⅱ
- 盛最多水的容器（证明过程同样重要）
- 最接近的的三数之和
- 找到字符串中所有字母异位词

# 队列
- 矩形区域不超过 K 的最大数值和
- 和至少为 K 的最短子数组
- 任务优先调度期
- 设计循环队列
- 双端循环队列（队列两端都可以删除和增加）

# 堆
- 数组中的第K个最大元素（重要）
- 最小的k个数

# 栈（想清楚什么时候入栈，入什么；什么时候出栈，出什么）
- 接雨水
- 柱状图中最大的矩形（困难）
- 验证二叉树的前序序列化
- 二叉树的序列化于反序列化（待做，与上题目相关）
- 二叉搜索树迭代器
- 逆波兰表达式求值
- 删除链表的倒数第N个节点
- 最长有效括号（栈和类似括号的结构的关系、栈的空间优化可以使用一个变量来解决）
- 使括号有效的最少添加
- 验证栈序列
- 检查替换后的此是否有效
- 字符串解码
- 括号的分数（与字符串解码类似）
- 移除K位数字
- 下一个更大的元素Ⅱ
- 链表中的下一个更大的节点（与上题类似）
- 每日温度（与上题类似）
- 股票价格跨度（与上题类似）
- 132模式
- 函数的独占时间
- 行星碰撞
- 索引处的解码字符串

# 链表
- 链表的中间节点（快慢指针）
- 环形链表
- 环形链表Ⅱ（重点）
- 相交链表
- 反转链表Ⅱ
- 旋转链表
- 两数相加
- 合并K个排序链表
- 排序链表
- 两两交换链表中的节点
- K 个一组翻转链表
- 分割链表
- 扁平化多级双向链表
- 删除链表中的节点
- 删除排序链表中重复的元素
- 删除排序链表中的重复元素 II（考虑使用一次遍历的方法）
- 重排链表
- 对链表进行插入排序
- 奇偶链表
- 分割链表
- 链表组件（读不通题目，直接用的答案）
- 从链表中删去总和值为零的连续节点

# 树结构
- 二叉树的锯齿形遍历（用两个stack实现）
- 在二叉树中增加一行
- 后序遍历
- 中序遍历
- 前序遍历
- 在每个树中找最大值
- 二叉树最大宽度
- 找树左下角的值
- 二叉树的右视图
- 寻找重复的子树
- 对称的二叉树
- 反转二叉树
- 最大二叉树
- 二叉搜索树中第K小的元素
- 恢复二叉搜索树
- 删除二叉搜索树中的节点
- 二叉树展开为链表
- 完全二叉树的个数
- 路径总和
- 求根到子夜点节点数字之和
- 出现次数最多的子树元素和

# 深度优先搜索（和回溯有关联）
- 从前序和中序构造二叉树（递归树是按照前序遍历进行访问的）
- 从中序和后序构造二叉树
- 输出二叉树
- 二叉树的直径
- 岛屿的最大面积（与二叉树的直径类似）
- 水壶问题

# 哈希表
- 三数之和（Arrays.sort(nums)）
- 四数之和（先排序在处理，利用HashTable保证唯一性）
- 四数相加 II
- 有效的数独（Set数组做筛选）
- 字母异位词分组
- 复制带随机指针的链表
- 重复的DNA序列
- 连续数组（与最长有效括号类似）
- H指数（先排序）
- 前K个高频元素
- 根据字符出现频率排序
- 设计推特（设计）
- 常数时间插入、删除和获取随机元素
- 分数到小数
- 砖墙（注意）
- 在系统中查找重复文件
- 单词替换
- 实现一个魔法字典
- 存在重复元素Ⅲ
